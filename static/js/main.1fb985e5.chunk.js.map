{"version":3,"sources":["pages/AccountBalance.js","pages/Home.js","pages/UserProfile.js","pages/Login.js","pages/Debits.js","pages/Credits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","this","props","accountBalance","Component","Home","src","alt","to","UserProfile","userName","memberSince","LogIn","handleChange","e","updatedUser","state","user","inputField","target","name","inputValue","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","onSubmit","htmlFor","type","onChange","Debits","debits","map","debit","amount","description","date","slice","id","addDebit","Credits","credits","credit","addCredit","App","balance","refreshBalance","reduce","a","b","toFixed","concat","crypto","randomUUID","parseFloat","elements","Date","toISOString","logInInfo","newUser","currentUser","fetchedInitialData","axios","get","data","creditSum","debitSum","forEach","basename","exact","path","render","Login","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1fb985e5.chunk.js","sourcesContent":["// src/components/AccountBalance.js\n\nimport React, {Component} from 'react';\n\nclass AccountBalance extends Component {\n  render() {\n    return (\n        <div>\n          Balance: {this.props.accountBalance}\n        </div>\n    );\n  }\n}\n\nexport default AccountBalance;","// src/components/Home.js\n\nimport React, {Component} from 'react';\nimport AccountBalance from './AccountBalance';\nimport {Link} from 'react-router-dom';\n\nclass Home extends Component {\n  render() {\n    return (\n        <div>\n          <img src=\"https://picsum.photos/201\" alt=\"bank\"/>\n          <h1>Bank of React</h1>\n\n          <Link to=\"/userProfile\">User Profile</Link> <br/>\n          <Link to=\"/Login\">Login </Link> <br/>\n          <Link to=\"/Debits\">Debits </Link> <br/> <br/>\n          <Link to=\"/Credits\">Credits </Link> <br/> <br/>\n          <AccountBalance accountBalance={this.props.accountBalance}/>\n        </div>\n    );\n  }\n}\n\nexport default Home;","import { render } from '@testing-library/react';\nimport React,{Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass UserProfile extends Component{\n    render() {\n        return (\n            <div>\n                <h1>User Profile</h1>\n                \n                <div>Username: {this.props.userName}</div>\n                <div>Member Since:{this.props.memberSince}</div>\n                <Link to=\"/\">Return to Home</Link>\n            </div>\n    \n            \n        )\n    }\n}\n\nexport default UserProfile;","// Login.js\nimport React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport AccountBalance from './AccountBalance';\n\n\nclass LogIn extends Component {\n  constructor () {\n    super()\n    this.state = {\n      user: {\n        userName: '',\n        password: ''\n      },\n      redirect: false\n    }\n  }\n\n  handleChange = (e) => {\n    const updatedUser = {...this.state.user}\n    const inputField = e.target.name\n    const inputValue = e.target.value\n    updatedUser[inputField] = inputValue\n\n    this.setState({user: updatedUser})\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.mockLogIn(this.state.user)\n    this.setState({redirect: true})\n  }\n\n  render () {\n    if (this.state.redirect) {\n      return (<Redirect to=\"/userProfile\"/>)\n\n    }\n    \n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label htmlFor=\"userName\">User Name</label>\n            <input type=\"text\" name=\"userName\" onChange={this.handleChange} value={this.state.user.userName} />\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" name=\"password\" />\n          </div>\n\n          <div>\n           <AccountBalance accountBalance={this.props.accountBalance}/>\n          </div>\n          <button>Log In</button>\n\n          \n        </form>\n      </div>\n    )\n  }\n}\n\nexport default LogIn","// src/components/Debits.js\n\nimport React, {Component} from 'react';\nimport AccountBalance from './AccountBalance';\nimport {Link} from 'react-router-dom';\n\n\nclass Debits extends Component {\n    render() {\n        let debits = this.props.debits;\n        return (\n            <div>\n                <h1>Debits</h1>\n                <div>\n                    {debits.map(debit => (\n                        <div key={debit.id}>\n                            <li>{debit.amount} {debit.description} {debit.date.slice(0, 10)}</li>\n                        </div>\n                    ))}\n                    <AccountBalance accountBalance={this.props.accountBalance}/>\n                    <form onSubmit={this.props.addDebit}>\n                        <p>\n                            <label id=\"description\"> Description: </label>\n                            <input type=\"text\" name=\"description\"/>\n                            <label id=\"amount\"> Amount: </label>\n                            <input type=\"number\" name=\"amount\"/>\n                            <button type=\"submit\"> Submit</button>\n                        </p>\n                    </form>\n                    <Link to=\"/\"> Home </Link>\n                    <Link to=\"/Login\"> Login </Link>\n                    <Link to=\"/UserProfile\"> User Profile </Link>\n                    <Link to=\"/Credits\"> Credits </Link>\n\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default Debits;\n\n","// src/components/Credits.js\n\nimport React, {Component} from 'react';\nimport AccountBalance from './AccountBalance';\nimport {Link} from 'react-router-dom';\n\n\nclass Credits extends Component {\n    render() {\n        let credits = this.props.credits;\n        return (\n            <div>\n                <h1>Credits</h1>\n                <div>\n                    {credits.map(credit => (\n                        <div key={credit.id}>\n                            <li>{credit.amount} {credit.description} {credit.date.slice(0, 10)}</li>\n                        </div>\n                    ))}\n                    <AccountBalance accountBalance={this.props.accountBalance}/>\n                    <form onSubmit={this.props.addCredit}>\n                        <p>\n                            <label id=\"description\"> Description: </label>\n                            <input type=\"text\" name=\"description\"/>\n                            <label id=\"amount\"> Amount: </label>\n                            <input type=\"number\" name=\"amount\"/>\n                            <button type=\"submit\"> Submit</button>\n                        </p>\n                    </form>\n                    <Link to=\"/\"> Home </Link>\n                    <Link to=\"/Login\"> Login </Link>\n                    <Link to=\"/UserProfile\"> User Profile </Link>\n                    <Link to=\"/Debits\"> Debits </Link>\n\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default Credits;\n\n","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Home from './pages/Home';\nimport UserProfile from './pages/UserProfile';\nimport Login from './pages/Login';\nimport Debits from './pages/Debits';\nimport Credits from './pages/Credits';\nimport axios from \"axios\"\nimport './App.css'\nimport AccountBalance from './pages/AccountBalance';\n\n\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      accountBalance: 0,\n      currentUser:{\n        userName: 'joe_shmo',\n        memberSince: '07/23/96'\n      },\n      debits: [],\n      credits:[],\n      fetchedInitialData: false,\n    }\n  }    \n\n  balance=()=>\n  {\n    return this.state.accountBalance;\n  }\n  async componentDidMount()\n  {\n    let debits = this.state.debits;\n    let credits = this.state.credits;\n    if (!this.state.fetchedInitialData) {\n      debits = (await axios.get(\"https://moj-api.herokuapp.com/debits\")).data;\n      credits = (await axios.get(\"https://moj-api.herokuapp.com/credits\")).data;\n      this.setState({ fetchedInitialData: true });\n    }\n\n    let creditSum=0;\n    let debitSum=0;\n    debits.forEach((debit)=>{\n      debitSum+=debit.amount\n    })\n    credits.forEach((credit)=>{\n      creditSum+=credit.amount\n    })\n    let accountBalance = (creditSum - debitSum).toFixed(2);\n    this.setState({debits,credits,accountBalance});\n  }\n\n  refreshBalance = () => {\n    this.setState(state => {\n      const credits = state.credits;\n      const debits = state.debits;\n\n      const creditsTotal = credits.reduce((a, b) => a + b.amount, 0);\n      const debitsTotal = debits.reduce((a, b) => a + b.amount, 0);\n      return {accountBalance: (creditsTotal - debitsTotal).toFixed(2)};\n    })\n  }\n  \n  addCredit = (e) => {\n    e.preventDefault();\n    this.setState({ credits: this.state.credits.concat([{\n      id: crypto.randomUUID(),\n      amount: parseFloat(e.target.elements.amount.value),\n      description: e.target.elements.description.value,\n      date: new Date().toISOString(),\n    }]) });\n    this.refreshBalance();\n  }\n\n  addDebit = (e) => {\n    e.preventDefault();\n    this.setState({ debits: this.state.debits.concat([{\n      id: crypto.randomUUID(),\n      amount: parseFloat(e.target.elements.amount.value),\n      description: e.target.elements.description.value,\n      date: new Date().toISOString(),\n    }]) });\n    this.refreshBalance();\n  }\n\n  mockLogIn = (logInInfo) => {\n      const newUser = {...this.state.currentUser}\n      newUser.userName = logInInfo.userName\n      this.setState({currentUser: newUser})\n  }\n        \n            \n        \n  \n  render() {\n\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance}/>);\n    const UserProfileComponent = () => (\n        <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince}  />\n    \n    );\n    const LogInComponent = () => (<Login user={this.state.currentUser} mockLogIn={this.mockLogIn} />);\n    const DebitsComponent = () => (<Debits addDebit={this.addDebit} debits={this.state.debits} accountBalance={this.state.accountBalance}/>);\n    const CreditsComponent = () => (<Credits addCredit={this.addCredit} credits={this.state.credits} accountBalance={this.state.accountBalance}/>);\n\n\n\n    return ( \n    \n    \n        <Router basename=\"/CSCI39548_bor_assn04\">\n            <Switch>\n            <Route exact path=\"/\" render={HomeComponent}/>\n            <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\n            <Route exact path=\"/login\" render={LogInComponent}/>\n            <Route exact path=\"/debits\" render={DebitsComponent}/>\n            <Route exact path=\"/credits\" render={CreditsComponent}/>\n\n            </Switch>\n        </Router>\n        \n//            <AccountBalance accountBalance={this.state.accountBalance}/>\n\n\n    );\n\n  }\n}\n\nexport default App\n\n/* <div>\n<button onClick={this.addCredit}>\n    Add credit\n</button>\n</div> */","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}